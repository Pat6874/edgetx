//
// WARNING: DO NOT EDIT THIS FILE
//   This file has been generated from the target's JSON hardware description
//

{# static const stm32_key_t _key_defs[] = { #}
{# {% for key in keys %} #}
{#   { #}
{#     "{{ key.name }}", {{ key.key }}, #}
{#     {{ key.gpio }}, {{ key.pin }}, #}
{#   }, #}
{# {% endfor %} #}
{# }; #}

{# static GPIO_TypeDef* const _key_GPIOs[] = { #}
{# {% for key_gpio, pins in key_gpios.items() | sort %} #}
{#   {{ key_gpio }}, #}
{# {% endfor %} #}
{# }; #}

static inline void _init_keys()
{
{% for key_gpio, pins in key_gpios.items() | sort %}
  stm32_gpio_enable_clock({{ key_gpio }});
{% endfor %}
}

static inline uint32_t _read_keys()
{
  uint32_t keys = 0;
{% for key in keys %}
  if (LL_GPIO_IsInputPinSet({{ key.gpio }}, {{ key.pin }}))
    keys |= (1 << {{ key.key }});
{% endfor %}
  return keys;
}

{# static const stm32_trim_t _trim_defs[] = { #}
{# {% for trim in trims %} #}
{#   // {{ trim.name }} #}
{#   { {{ trim.dec.gpio }}, {{ trim.dec.pin }} }, #}
{#   { {{ trim.inc.gpio }}, {{ trim.inc.pin }} }, #}
{# {% endfor %} #}
{# }; #}

{# static GPIO_TypeDef* const _trim_GPIOs[] = { #}
{# {% for trim_gpio, pins in trim_gpios.items() | sort %} #}
{#   {{ trim_gpio }}, #}
{# {% endfor %} #}
{# }; #}

static inline uint32_t _read_trims()
{
  uint32_t trims = 0;
{% for trim in trims %}
  if (LL_GPIO_IsInputPinSet({{ trim.dec.gpio }}, {{ trim.dec.pin }}))
    trims |= (1 << {{ loop.index0 }});
  if (LL_GPIO_IsInputPinSet({{ trim.inc.gpio }}, {{ trim.inc.pin }}))
    trims |= (1 << {{ loop.index0 + 1 }});
{% endfor %}
  return trims;
}

static inline void _init_trims()
{
{% for trim_gpio, pins in trim_gpios.items() | sort %}
  stm32_gpio_enable_clock({{ trim_gpio }});
{% endfor %}
}
